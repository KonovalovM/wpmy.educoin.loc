
function edcGetOptionsTinyMce() {

    var options =  { 
            
        selector: '',
        readonly: 0,

        language: 'ru',
        plugins: [
            'autolink lists link image charmap print preview textcolor',
            'searchreplace visualblocks code fullscreen',
            'table paste code help autoresize hr table codesample code'
        ],
        menubar: false,
        toolbar: 'insert | undo redo | formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | edc_emojis myinsertfile table codesample code',

        default_link_target: "_blank",
        link_title: false,

        codesample_languages: [
            {text: 'HTML/XML', value: 'markup'},
            {text: 'JavaScript', value: 'javascript'},
            {text: 'CSS', value: 'css'},
            {text: 'PHP', value: 'php'}
        ],

        image_description: false,

        setup: function ( editor ) {
            editor.addButton( 'myinsertfile', {
                text: '',
                icon: 'newdocument',
                tooltip: '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª',
                onclick: function () {
                    editor.notificationManager.open({
                      text: '–î–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞ –≤ DropBox/Google Drive, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ.',
                      type: 'info'
                    });
                }
            }),
            editor.addButton( 'edc_emojis', {
                type: 'menubutton',
                text: 'üòä',
                icon: false,
                tooltip: 'Emoji',
                menu: [
                  {text: '–ü–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö üëç', onclick: function() {editor.insertContent('üëç');}}, 
                  {text: '–ü–æ–¥–º–∏–≥–∏–≤–∞–Ω–∏–µ üòâ', onclick: function() {editor.insertContent('üòâ');}},
                  {text: '–£–ª—ã–±–∫–∞ üòä', onclick: function() {editor.insertContent('üòä');}},
                  {text: '–°–º–µ—Ö –¥–æ —Å–ª–µ–∑ üòÇ', onclick: function() {editor.insertContent('üòÇ');}},
                  {text: '–ë—É–º üí•', onclick: function() {editor.insertContent('üí•');}},
                  {text: '–ö—Ä—É—Ç—å ü§ò', onclick: function() {editor.insertContent('ü§ò');}},
                  {text: '–û–≥–æ–Ω—å üî•', onclick: function() {editor.insertContent('üî•');}},
                  {text: '–•–ª–æ–ø—É—à–∫–∞ —Å –∫–æ–Ω—Ñ–µ—Ç–∏ üéâ', onclick: function() {editor.insertContent('üéâ');}},
                  {text: '–®–∞—Ä –∏–∑ –∫–æ–Ω—Ñ–µ—Ç–∏ üéä', onclick: function() {editor.insertContent('üéä');}},
                  {text: '–¢–∞–Ω—Ü–æ—Ä üï∫', onclick: function() {editor.insertContent('üï∫');}},
                  {text: '–•–ª–æ–ø–∫–∏ –≤ –ª–∞–¥–æ—à–∏ üëè', onclick: function() {editor.insertContent('üëè');}},
                  {text: '–ë–∏—Ü–µ–ø—Å üí™', onclick: function() {editor.insertContent('üí™');}},
                  {text: '–°–µ–∫—É–Ω–¥–æ–º–µ—Ä ‚è±', onclick: function() {editor.insertContent('‚è±');}},
                  {text: '–ó–≤–µ–∑–¥–∞ ‚≠ê', onclick: function() {editor.insertContent('‚≠ê');}},
                  {
                    text: '–û—Å—Ç–∞–ª—å–Ω–æ–µ', 
                    onclick: function() {
                      editor.notificationManager.open({
                        text: '–û—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ <a href="https://www.emojicopy.com/" target="_blank">—Å—Å—ã–ª–∫–µ</a>.',
                        type: 'info'
                      });
                    }},
                ]
            });
        }
    };
    
    return options;
}

function edcCreateTinyMce( selector ) {
    
    var options = edcGetOptionsTinyMce();
    
    options['selector'] = selector;
    
    tinymce.init( options );
}

function edcCreateDisabledTinyMce( selector ) {

    var options = edcGetOptionsTinyMce();
    
    options['selector'] = selector;
    options['readonly'] = 1;
    
    tinymce.init( options );
}

function edcEnableTinyMce( selector ) {
    
    $( selector ).removeAttr( 'disabled' )

    var options = edcGetOptionsTinyMce();
    options['selector'] = selector;

    tinymce.remove( selector );
    tinymce.init( options );
}

( function ( $, root, undefined ) {
	
	$( function () {
		
		'use strict';
		
        $( document ).ready( function() {
            
            // create TinyMCE
            edcCreateTinyMce( 'textarea.advanced:not([disabled])' );
            // create disabled TinyMCE
            edcCreateDisabledTinyMce( 'textarea.advanced[disabled]' );
        } );
      
    } );

} )( jQuery, this );